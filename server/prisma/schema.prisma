generator prisma_client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @default(uuid()) @id
  handle           String
  displayName      String?
  profilePicture   String?
  createdAt        DateTime        @default(now())
  Share            Share[]
  twitterAccountId String?         @unique
  TwitterAccount   TwitterAccount? @relation(fields: [twitterAccountId], references: [id])
}

model TwitterAccount {
  id     String  @unique @id
  token  String?
  secret String?
  User   User
}

model Share {
  id        String   @default(uuid()) @id
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  episodeId String
  episode   Episode  @relation(fields: [episodeId], references: [id])
  message   String?
  createdAt DateTime @default(now())
  @@unique([episodeId, authorId])
}

model Episode {
  id                 String   @default(uuid()) @id
  title              String
  share              Share[]
  podcast            Podcast  @relation(fields: [podcastId], references: [id])
  podcastId          String
  description        String?
  ampId              String?  @unique
  spotifyId          String?  @unique
  durationSeconds    Int?
  url                String?
  ampApiResponse     Json?
  spotifyApiResponse Json?
  updatedAt          DateTime @updatedAt
  artwork            String?
}

model Podcast {
  id                 String    @default(uuid()) @id
  title              String
  Episode            Episode[]
  ampId              String?   @unique
  spotifyId          String?   @unique
  publisher          String
  description        String?
  feed               String
  url                String?
  ampApiResponse     Json?
  spotifyApiResponse Json?
  updatedAt          DateTime  @updatedAt
  artwork            String?
}
