// CREATE EXTENSION "unaccent";
//
// ALTER TABLE "Podcast" DROP COLUMN tsv;
//
// CREATE OR REPLACE FUNCTION public.f_unaccent(text) RETURNS text AS
//   $func$
//     SELECT public.unaccent('public.unaccent', $1)
//   $func$
// LANGUAGE sql IMMUTABLE PARALLEL SAFE STRICT;
//
// ALTER TABLE "Podcast"
//   ADD tsv tsvector
//     GENERATED ALWAYS AS
//       (setweight(to_tsvector('simple', f_unaccent(title)), 'A') || setweight(to_tsvector('simple', f_unaccent(publisher)), 'B')) STORED;
//
// CREATE INDEX "Podcast_tsv_idx" ON "Podcast" USING GIN (tsv tsvector_ops);

generator prisma_client {
  provider        = "prisma-client-js"
  previewFeatures = ["createMany"]
  binaryTargets   = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(uuid())
  handle              String
  displayName         String?
  profilePicture      String?
  createdAt           DateTime              @default(now())
  feedCheckedAt       DateTime?
  feedToken           String                @unique
  AddedToPersonalFeed AddedToPersonalFeed[]
  Share               Share[]
  twitterAccount      TwitterAccount?
}

model TwitterAccount {
  id        String   @id
  token     String?
  secret    String?
  following String[]
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  updatedAt DateTime @default(now()) @updatedAt
}

model Share {
  id                  String                @id
  authorId            String
  episodeId           String
  message             String?
  createdAt           DateTime              @default(now())
  hideFromGlobalFeed  Boolean               @default(false)
  author              User                  @relation(fields: [authorId], references: [id])
  episode             Episode               @relation(fields: [episodeId], references: [id])
  AddedToPersonalFeed AddedToPersonalFeed[]

  @@unique([episodeId, authorId], name: "Share_episodeId_authorId_unique")
}

model AddedToPersonalFeed {
  shareId String
  userId  String
  share   Share  @relation(fields: [shareId], references: [id])
  user    User   @relation(fields: [userId], references: [id])

  @@id([shareId, userId])
}

model Episode {
  id              String   @id
  title           String
  podcastId       String
  durationSeconds Int?
  datePublished   DateTime
  artwork         String?
  url             String?
  description     String?
  enclosureUrl    String
  enclosureLength Int?
  enclosureType   String?
  podcast         Podcast  @relation(fields: [podcastId], references: [id])
  share           Share[]
}

model Podcast {
  id        String                   @id
  title     String
  itunesId  Int?
  publisher String
  artwork   String?
  tsv       Unsupported("tsvector")?
  Episode   Episode[]

  @@index([tsv], name: "Podcast_tsv_idx")
  @@index([itunesId], name: "Podcast_itunesId_idx")
}

model PodcastClient {
  id                        String  @id
  displayName               String
  icon                      String
  subscribeUrl              String
  subscribeUrlNeedsProtocol Boolean
}

enum AsyncJobStatus {
  Scheduled
  Running
  Completed
  Failed
}
