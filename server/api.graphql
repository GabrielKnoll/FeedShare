### This file was generated by Nexus Schema
### Do not make changes to this file directly


interface Artwork {
  artwork(format: ArtworkFormat, size: Int): String
}

enum ArtworkFormat {
  heic
  jpg
  png
  webp
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Episode implements Artwork {
  artwork(format: ArtworkFormat, size: Int): String
  description: String
  durationSeconds: Int
  id: String!
  podcast: Podcast!
  title: String!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Mutation {
  createShare(episodeId: String!, message: String): Share
  createViewer(twitterId: String!, twitterToken: String!, twitterTokenSecret: String!): Viewer
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
}

type Podcast implements Artwork {
  artwork(format: ArtworkFormat, size: Int): String
  description: String
  feed: String!
  id: String!
  latestEpisodes(length: Int = 5): [Episode]!
  publisher: String!
  subscribeLink(client: PodcastClient): String
  title: String!
}

enum PodcastClient {
  ApplePodcasts
  Castro
  Overcast
  PocketCasts
  Spotify
}

type Query {
  resolveShareUrl(url: String!): ResolvedShareUrl
  shares(after: String, before: String, last: Int!): ShareConnection!
  viewer: Viewer
}

type ResolvedShareUrl {
  episode: Episode
  podcast: Podcast
}

type Share {
  author: User!
  createdAt: DateTime!
  episode: Episode!
  id: String!
  message: String
}

type ShareConnection {
  edges: [ShareEdge]
  pageInfo: PageInfo
}

type ShareEdge {
  cursor: String
  node: Share
}

type User {
  displayName: String
  handle: String!
  id: String!
  isViewer: Boolean
  profilePicture: String
}

type Viewer {
  personalFeed: String!
  token: String!
  user: User!
}
